export declare const REPO_INDEXING_GROUP_PROMPT = "# Component Repository Analysis and Grouping\n\n## Objective\nAnalyze the repository to identify and categorize all components, focusing on component coupling and logical groupings.\n\n## Instructions\n\n### 1. Component Discovery\n- Scan the entire repository for all components\n\n### 2. Coupling Analysis\nIdentify components that are deeply coupled through:\n- **Naming patterns** (e.g., Card, CardHeader, CardContent, CardFooter)\n- **Functional relationships** (components designed to work together)\n- **Compositional patterns** (parent-child component relationships)\n\n### 3. Grouping Criteria\nGroup components based on:\n- **Semantic relationship** (related functionality)\n- **Usage patterns** (components typically used together)\n\n### 4. Relevant Files\n- In the relevantFiles array, include all important files like the component, any example files, and any other files that are important to the component.\n\n## Required Output Format\n\nGenerate a component-groups.json file with this shape: \n[\n  {\n    \"name\": \"Button\", \n    \"description\": \"Strongest coupling through shared props and functionality\",\n    \"components\": [\"Button\", \"ButtonDropdown\", \"ButtonGroup\", \"ToggleButton\"],\n    \"relevantFiles\": [\"button.tsx\", \"button-dropdown.tsx\", \"button-group.tsx\", \"toggle-button.tsx\"]\n  },\n  {\n    \"name\": \"Form\",\n    \"description\": \"Deeply coupled through FormFieldContext and shared validation patterns\",\n    \"components\": [\"Form\", \"FormField\", \"Input\", \"Textarea\", \"Checkbox\"],\n    \"relevantFiles\": [\"form.tsx\", \"form-field.tsx\", \"input.tsx\", \"textarea.tsx\", \"checkbox.tsx\"]\n  }\n]\n\n**Component Coverage:**\n- Include ALL components found in the repository\n- Every component must appear in exactly one group\n- Create standalone groups for ungrouped components with couplingStrength: \"none\"\n- Only return the JSON array, nothing else";
